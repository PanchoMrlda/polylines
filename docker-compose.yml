version: '3'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: php:7.2-fpm
    container_name: polylines_app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: polylines_app
      SERVICE_TAGS: dev
    working_dir: /var/www/html
    volumes:
      - ./src/:/var/www/html
      - ./.env:/var/www/html/.env
      - ./php.ini-development:/usr/local/etc/php/php.ini
    networks:
      - polylines_app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: polylines_webserver
    restart: unless-stopped
    tty: true
    ports:
      - '${DOCKER_PORT_HTTP}:80'
    volumes:
      - ./src/:/var/www/html
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - polylines_app-network

  #MySQL Service
  db:
    image: mysql:5.7.22
    container_name: polylines_db
    restart: unless-stopped
    tty: true
    ports:
      - '${DOCKER_PORT_MYSQL}:${DOCKER_PORT_MYSQL}'
    environment:
      MYSQL_DATABASE: '${MYSQL_DATABASE}'
      MYSQL_USER: '${MYSQL_USER}'
      MYSQL_PASSWORD: '${MYSQL_PASSWORD}'
      MYSQL_ROOT_PASSWORD: '${MYSQL_ROOT_PASSWORD}'
      MYSQL_TCP_PORT: '${DOCKER_PORT_MYSQL}'
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
    networks:
      - polylines_app-network

#Docker Networks
networks:
  polylines_app-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local
